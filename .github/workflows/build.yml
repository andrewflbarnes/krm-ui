# Simple workflow for verifying build
name: Verify build

permissions:
  contents: read

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "build"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      # https://github.com/pnpm/pnpm/issues/9191
      - name: Set up pnpm global bin directory`
        run: |
          if [ "$RUNNER_OS" == "Windows" ]; then
            PNPM_HOME=/c/Program\ Files/Git/home/runner/.local/share/pnpm
          elif [ "$RUNNER_OS" == "Linux" ]; then
            PNPM_HOME=/home/runner/.local/share/pnpm
          fi
          echo "PNPM_HOME=$PNPM_HOME" >> "$GITHUB_ENV"
          echo "$PNPM_HOME" >> "$GITHUB_PATH"
        shell: bash
      - name: Enable corepack
        run: |
          npm install -g corepack@latest
          corepack enable
      - name: Cache
        uses: actions/setup-node@v4
        with:
          node-version-file: .node-version
          cache: 'pnpm'
          cache-dependency-path: |
            pnpm-lock.yaml
            netlify/functions/ksc-results/pnpm-lock.yaml
      - name: Install
        run: |
          pnpm install
      - name: Test
        run: pnpm test
      - name: Check TS violations
        run: pnpm check
      - name: Check ESLint violations
        run: pnpm lint
      - name: Update version
        run: .github/update_version.sh
      - name: Build
        env:
          NODE_ENV: production
          VITE_CLERK_PUBLISHABLE_KEY: "${{ secrets.VITE_CLERK_PUBLISHABLE_KEY }}"
        run: pnpm build
      - name: Install netlify
        run: pnpm install -g netlify-cli
      - name: Deploy to Netlify
        env:
          NETLIFY_SITE_ID: "${{ secrets.NETLIFY_SITE_ID }}"
          NETLIFY_AUTH_TOKEN: "${{ secrets.NETLIFY_API_TOKEN }}"
        run: .github/deploy.sh
